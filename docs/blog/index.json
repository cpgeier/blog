[
    {
        "ref": "https://cpgeier.github.io/blog/blog/placeholder-text/",
        "title": "Real-time Social Media",
        "section": "blog",
        "date" : "2019.03.09",
        "body": " A nearly free way to host a website streaming Twitter data I built a nearly free website for streaming live Twitter data..\nI also knew that there are so many hosting services with a \u0026ldquo;community\u0026rdquo; or \u0026ldquo;hobby\u0026rdquo; tier and I wanted to see if I could build a cool website that doesn\u0026rsquo;t cost money to host.\nPlease give me a star on my Github if you like my work! \nMotivation I really like looking at data and I thought watching the first 2019 Democratic debates were pretty exciting. I wanted to see if it was possible for me to create a live stream of Tweets from twitter around the election. I thought it would be really cool, especially during debates, to see what people were tweeting about.\nTwitter API The Twitter API has a streaming API endpoint and I used this to get all the data that I use in the application. The python-twitter python package was super useful for connecting to the api.\nTo pipe data in constantly I deployed a Python script with Docker on Azure Container service. This is the only part of the tech stack that may cost money, however this part could be run from a Raspberry Pi. I used the Azure Student discount in this case so it didn\u0026rsquo;t cost anything for me.\nWhere to store Twitter data? Elasticsearch is a great place to put Twitter data because the data can be easily searched or filtered. I was able to have my Elasticsearch server hosted for free through https://bonsai.io/. Although they use an older version it works pretty well.\nTo use the free Elasticsearch service I had to impliment a way to clear out old records in the server since I only have ~120mb on the free server version. I ended up just instructing my Python function to clear old records after the size gets over 100mb.\nAn API for Elasticsearch data Now I needed a way to retrieve that data from Elasticsearch. Express is a fantastic backend and while I was searching for real-time data stream platforms I found Socket.io which seemed to have a really good support and documentation.\nI ended up following this tutorial to get up and running with Angular, D3, and Socket.IO.\nFront end For the front end I used Angular, Bootstrap and Ngx-Charts. Originally I used the D3 setup from the tutorial, but I figured D3 was too combersome to plot simple streaming data.\nStreaming Tweets One of the major problems I ran into was trying to get the Twitter tweets to render and then disappear in a way that looked good.\nThe reason why two tweets appear now isn\u0026rsquo;t really intentional. Originally I wanted to have one tweet on the screen that instantly switches to a new tweet after a period.\nHowever since the only easy way to render tweets in the Twitter way is to use their Javascript which doesn\u0026rsquo;t play nice with Angular.\nI ended up doing a really weird hack to get it to work and if I spend more time on this project I\u0026rsquo;ll probably try to fix it.\n// @ts-ignore\r twttr.widgets.createTweet(\rthis.tweetId,\rdocument.getElementById(\u0026#34;tw-\u0026#34; + this.first)\r);  The key was using this javascript to embed the tweet in the page rather than chaning the embed HTML.\nTools All the tools I used are listed here:\n Elasticsearch  Tweet storage Ability to filter tweets Deployed through Bonsai.io  Express \u0026amp; Socket.io  Maintains live connection to send data Calls Elasticsearch every second for new data Deployed through Azure Container Service  Angular \u0026amp; Bootstrap  Front end framework Deployed through Heroku   Someother tools I used were:\n DockerHub - Free container builds Freenom - Free domain hosting  Moving forward The way I host my application (Heroku, Netlify, and Azure Container Service) allows me to have CD of the application as I make changes to it. I hope to containerize more of my services to make this project easier to host.\nAlso, in the future I\u0026rsquo;m hoping to add more live visualizations of specifically tweet keyword data like \u0026ldquo;Joe Biden\u0026rdquo; or \u0026ldquo;Donald Trump.\u0026rdquo;\nOne of my main objectives with this site is to stay as unbiased as possible and so I\u0026rsquo;m hoping to add visualizations that go cater to all sides of the election.\n"
    }
]
